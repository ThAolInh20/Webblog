

services:
  # Backend: Laravel API
  backend:
    image: laravel:latest
    container_name: laravel-api
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
    networks:
      - webnet
    ports:
      - "8000:8000"
    command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
    depends_on:
      - db

  # Frontend: Vue.js
  frontend:
    image: node:latest
    container_name: vue-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Ngăn chặn lỗi khi dùng node_modules trong container
    environment:
      - CHOKIDAR_USEPOLLING=true # Cần thiết để Vue nhận diện thay đổi file
      - WATCHPACK_POLLING=true # Cần thiết để Vue nhận diện thay đổi file
    networks:
      - webnet
    ports:
      - "8081:8081"
    command: ["npm", "run", "serve"]

  # Database: MySQL
  db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: webblog
      MYSQL_USER: webblog
      MYSQL_PASSWORD: webblog
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - webnet
    ports:
      - "3307:3306"

  # Nginx (Reverse Proxy)
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./backend:/var/www/html
      - ./frontend:/app
    ports:
      - "8085:80"
    depends_on:
      - backend
      - frontend
    networks:
      - webnet
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: webblog
      MySQL_PASSWORD: webblog
    ports:
      - "8083:80"
    networks:
      - webnet
    depends_on:
      - db
networks:
  webnet:
    driver: bridge
volumes:
  dbdata:
    driver: local
